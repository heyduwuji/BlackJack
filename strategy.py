import numpy as np
from array_to_latex import to_ltx
import re

P_s = np.zeros((22, 11), dtype=float)
P_s[17] = np.array([.0, .1432 , .1386  , .1340  , .1293  , .1247  , .1200  ,  .3806 , .1392  , .1292  ,  .1200])
P_s[18] = np.array([.0, .1366  , .1325  , .1283  ,  .1241 , .1198  , .1154  , .0907  , .3699  ,  .1292 ,  .1200])
P_s[19] = np.array([.0, .1295  , .1259  , .1222  , .1184  , .1145  , .1105  , .0861  , .0800  ,  .3600 ,  .1200])
P_s[20] = np.array([.0, .1218   , .1188 , .1156 , .1123 , .1088 , .1052 , .0812 , .0754 , .0701 , .3508])
P_s[21] = np.array([.0, .1669 , .1112 , .1085 , .1057 , .1027 , .0996 , .0760 , .0705 , .0655 , .0608])

# P_s = np.array([
#     [.1432 , .1386  , .1340  , .1293  , .1247  , .1200  ,  .3806 , .1392  , .1292  ,  .1200],
#     [.1366  , .1325  , .1283  ,  .1241 , .1198  , .1154  , .0907  , .3699  ,  .1292 ,  .1200],
#     [.1295  , .1259  , .1222  , .1184  , .1145  , .1105  , .0861  , .0800  ,  .3600 ,  .1200],
#     [.1218   , .1188 , .1156 , .1123 , .1088 , .1052 , .0812 , .0754 , .0701 , .3508],
#     [.1669 , .1112 , .1085 , .1057 , .1027 , .0996 , .0760 , .0705 , .0655 , .0608]
# ])


P_B = np.array([[.0, .3020 , .3729  , .3913  , .4103  , .4296  , .4493  , .2853  , .2649  , .2460  ,  .2284]])

P = np.zeros((31, 11), dtype=float)

S = np.zeros((31, 11), dtype=bool)

for i in range(22, 31):
    for j in range(1, 11):
        P[i][j] = 0.0

for j in range(1, 11):
    P[21][j] = 1.0

for d in range(1, 11):
    for x in range(20, 1, -1):
        P_H = 3.0 / 13.0 * P[x+10][d] + 1.0 / 13.0 * np.sum(P[x+1:x+11,d])
        P_S = P_B[0][d] + np.sum(P_s[0:x,d])
        if P_H > P_S:
            P[x][d] = P_H
            S[x][d] = 1
        else:
            P[x][d] = P_S
            S[x][d] = 0

# print(to_ltx(P[1:22, 0:11]))
# print(to_ltx(S[1:22, 0:11],print_out=False).__class__)
# print(re.sub("1.00", "H", re.sub("0.00", "S", to_ltx(S[1:22, 0:11], print_out=False))))

card = [1,2,3,4,5,6,7,8,9,10,10,10,10]

prob = 0.0

for d in card:
    for first in card:
        for second in card:
            prob += P[first+second][d] / 13**3

print(prob)